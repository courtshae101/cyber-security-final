filter(is.na(airquality$Ozone_categories) == FALSE) %>%
filter(Wind >12)%>%
count(Wind_Categories, Ozone_categories) %>%
ggplot(aes(x=Wind_Categories, y=Ozone_categories))+
geom_tile(aes(fill=n))
airquality %>%
filter(Wind >12)%>%
ggplot(aes(x=Wind, y=Ozone))+
geom_point() +
geom_smooth(method = "lm")
airquality %>%
ggplot(aes(x=Wind, y=Ozone))+
geom_point() +
geom_smooth(method = "lm")
airquality %>%
ggplot(aes(x=Temp, y=Ozone)) +
geom_point(na.rm = TRUE) +
geom_smooth(method = "lm", na.rm = TRUE)
cor(x=airquality$Temp, y=airquality$Ozone, use="complete.obs")
airquality %>%
filter(Temp > 85) %>%
ggplot(aes(x=Temp, y=Ozone)) +
geom_point() +
geom_smooth(method = "lm")
airquality %>%
ggplot(aes(x=Ozone_categories, y=Temp))+
geom_boxplot()
Month_Factor <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x == 5){
return("May")
}
else if(x == 6){
return("June")
}
else if(x == 7){
return("July")
}
else if(x == 8){
return("August")
}
else{
return("September")
}
}
airquality$Month_Names <- sapply(airquality$Month, Month_Factor)
Month_Levels = c("May", "June", "July", "August", "September")
airquality$Month_Names <- factor(airquality$Month_Names, levels= Month_Levels)
head(airquality)
airquality %>%
ggplot(aes(x=Month_Names, y=Ozone, color = Month_Names)) +
geom_boxplot() +
geom_jitter()
airquality %>%
ggplot(aes(x=Month, y=Ozone)) +
geom_jitter() +
geom_smooth()
Month_and_Ozone <- airquality %>%
filter(is.na(airquality$Ozone) == FALSE) %>%
group_by(Month_Names) %>%
summarize(sd = sd(Ozone))
Month_and_Ozone %>%
mutate(var = sd^2)
Ozone_summary <- airquality %>%
filter(is.na(airquality$Ozone) == FALSE) %>%
summarize(sd = sd(Ozone))
Ozone_summary %>%
mutate(var = sd^2)
airquality %>%
filter(Month_Names == "May" | Month_Names == "June") %>%
ggplot(aes(x=Month_Names, y = Ozone)) +
geom_boxplot()
airquality %>%
ggplot(aes(x=Month, y=Ozone)) +
geom_jitter() +
geom_smooth()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
breaches <- read_csv('C:/Users/student/Documents/SYS 2202/cyber-security-final/courtney-final-variables/Cyber Security Breaches (1).csv',
col_types = cols(
State = col_factor(),
Individuals_Affected = col_integer()
)
)
head(breaches)
state_bar <- breaches %>%
mutate(State = State %>% fct_infreq() %>% fct_rev()) %>%
ggplot(aes(x=State)) +
geom_bar()+
coord_flip()
state_bar
count_state <- breaches %>%
mutate(State = State %>% fct_infreq() %>% fct_rev()) %>%
count(State)
count_state
breaches %>%
mutate(State = State %>% fct_infreq() %>% fct_rev()) %>%
ggplot(aes(x=State)) +
geom_bar()+
coord_flip()
state_count <- breaches %>%
group_by(State) %>%
count()
state_count
stdev <-  sd(state_count$n, na.rm = TRUE)
stdev
innerQ <-  IQR(state_count$n, na.rm = TRUE)
innerQ
firstQ <- quantile(state_count$n, 0.25, na.rm = TRUE)
firstQ <- firstQ[[1]]
thirdQ <- quantile(state_count$n, 0.75, na.rm = TRUE)
thirdQ <- thirdQ[[1]]
outlier_list <- state_count %>%
filter(n < (firstQ - innerQ * 1.5) |
n > (thirdQ + innerQ * 1.5))
outlier_list
outlier_state = c("TX", "CA", "FL")
no_out_bar <- breaches %>%
mutate(State = State %>% fct_infreq() %>% fct_rev()) %>%
filter(!(State %in% outlier_state)) %>%
ggplot(aes(x=State)) +
geom_bar()+
coord_flip()+
ylim(0, 110) +
labs(title = "Outliers removed")
out_in_bar <- breaches %>%
mutate(State = State %>% fct_infreq() %>% fct_rev()) %>%
ggplot(aes(x=State)) +
geom_bar()+
coord_flip()+
ylim(0,110) +
labs(title = "Outliers included")
ggarrange(no_out_bar, out_in_bar, ncol = 2)
missing <- is.na(breaches$State)
num_missing <- as.data.frame(table(missing))
num_missing
summary(breaches$State)
breaches$State %>%
unique()
northeast_list <- c("CT", "MA", "NH", "NJ", "NY", "PA", "RI", "VT", "DE", "MD")
#function to determine if the states are in the northeast
northeast_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% northeast_list){
return(TRUE)
}
else{
return(FALSE)
}
}
breaches$northeast <- sapply(breaches$State, northeast_check)
head(breaches)
breaches %>%
ggplot(aes(x=northeast, fill = northeast)) +
geom_bar()
westcoast_list <- c("WY", "CO", "UT", "NV", "ID", "CA", "OR", "WA", "AK")
#function to determine if the states are on the West Coast
westcoast_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% westcoast_list){
return(TRUE)
}
else{
return(FALSE)
}
}
breaches$westcoast <- sapply(breaches$State, westcoast_check)
head(breaches)
midwest_list <- c("ND", "SD", "NE", "KS", "MO", "IA", "MN", "WI", "MI", "IL", "IN", "OH")
#function to determine if the states are in the midwest
midwest_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% midwest_list){
return(TRUE)
}
else{
return(FALSE)
}
}
breaches$midwest <- sapply(breaches$State, midwest_check)
head(breaches)
south_list <- c("MD", "DE", "VA", "WV", "KY", "TN", "NC", "SC", "FL", "GA", "AL", "MS", "LA", "AK", "TX", "OK", "DC", "PR")
#function to determine if the states are in the south
south_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% south_list){
return(TRUE)
}
else{
return(FALSE)
}
}
breaches$south <- sapply(breaches$State, south_check)
head(breaches)
northeast_bar <-
breaches %>%
ggplot(aes(x=northeast, fill = northeast)) +
geom_bar()
midwest_bar <-
breaches %>%
ggplot(aes(x=midwest, fill = midwest)) +
geom_bar()
westcoast_bar <-
breaches %>%
ggplot(aes(x=westcoast, fill = westcoast)) +
geom_bar()
south_bar <-
breaches %>%
ggplot(aes(x=south, fill = south)) +
geom_bar()
ggarrange(northeast_bar, midwest_bar, westcoast_bar, south_bar, nrow = 2, ncol = 2)
indiv_box <- breaches %>%
ggplot(aes(x=Individuals_Affected)) +
geom_boxplot()
indiv_hist <- breaches %>%
ggplot(aes(x=Individuals_Affected)) +
geom_histogram()
indiv_box_zoom <- breaches %>%
ggplot(aes(x=Individuals_Affected)) +
geom_boxplot()+
xlim(0, 35000) +
labs(title = "0 to 35,000 zoom in")
indiv_hist_zoom <- breaches %>%
ggplot(aes(x=Individuals_Affected)) +
geom_histogram() +
xlim(0, 35000) +
labs(title = "0 to 35,000 zoom in")
ggarrange(indiv_box, indiv_hist, indiv_box_zoom, indiv_hist_zoom,  nrow = 2, ncol = 2)
summary(breaches)
IQR(breaches$Individuals_Affected, na.rm = TRUE)
airquality %>%
ggplot(aes(x=Solar.R)) +
geom_boxplot()
#no outliers
neg_indiv <- breaches %>%
filter(Individuals_Affected < 0)
neg_indiv
large_indiv <- breaches %>%
filter(Individuals_Affected > 3000000)
large_indiv
stdev <-  sd(breaches$Individuals_Affected, na.rm = TRUE)
stdev
innerQ <-  IQR(breaches$Individuals_Affected, na.rm = TRUE)
innerQ
firstQ <- quantile(breaches$Individuals_Affected, 0.25, na.rm = TRUE)
firstQ <- firstQ[[1]]
thirdQ <- quantile(breaches$Individuals_Affected, 0.75, na.rm = TRUE)
thirdQ <- thirdQ[[1]]
outlier_list <- breaches %>%
filter(Individuals_Affected < (firstQ - innerQ * 1.5) |
Individuals_Affected > (thirdQ + innerQ * 1.5))
outlier_list
outliers_removed <- breaches %>%
filter(!Individuals_Affected %in% outlier_list$Individuals_Affected) %>%
ggplot(aes(x=Individuals_Affected))+
geom_histogram() +
labs(title = "Outliers Removed")
outliers_included <- breaches %>%
ggplot(aes(x=Individuals_Affected)) +
geom_histogram()+
labs(title = "Outliers Included")
ggarrange(outliers_removed, outliers_included, nrow = 2)
missing <- is.na(breaches$Individuals_Affected)
num_missing <- as.data.frame(table(missing))
num_missing
summary(breaches$Individuals_Affected)
#function to determine if the ozone levels are healthy using values given in graphic above
high_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x >= 20000){
return(TRUE)
}
else{
return(FALSE)
}
}
breaches$large_affected <- sapply(breaches$Individuals_Affected, high_check)
head(breaches)
breaches %>%
ggplot(aes(x=large_affected, fill = large_affected)) +
geom_bar()
region_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% westcoast_list){
return("westcoast")
}
else if(x %in% northeast_list){
return("northeast")
}
else if(x %in% midwest_list){
return("midwest")
}
else if(x %in% south_list){
return("south")
}
else{
return("other")
}
}
breaches$region <- sapply(breaches$State, region_check)
region_levels = c("northeast", "midwest", "south", "westcoast", "other")
breaches$region <- factor(breaches$region, levels= region_levels)
breaches %>%
ggplot(aes(x = region, y = Individuals_Affected)) +
geom_boxplot()
breaches %>%
ggplot(aes(x = region, y = Individuals_Affected)) +
geom_bar()
breaches %>%
ggplot(aes(x = region, y = Individuals_Affected)) +
geom_col()
breaches %>%
ggplot(aes(x = region, y = Individuals_Affected, color = Individuals_Affected)) +
geom_col()
breaches %>%
ggplot(aes(x = region, y = Individuals_Affected, color = region)) +
geom_col()
breaches %>%
ggplot(aes(x = region, y = Individuals_Affected, fill = region)) +
geom_col()
midwest_list <- c("ND", "SD", "NE", "KS", "MO", "IA", "MN", "WI", "MI", "IL", "IN", "OH", "MT")
#function to determine if the states are in the midwest
midwest_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% midwest_list){
return(TRUE)
}
else{
return(FALSE)
}
}
breaches$midwest <- sapply(breaches$State, midwest_check)
head(breaches)
region_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% westcoast_list){
return("westcoast")
}
else if(x %in% northeast_list){
return("northeast")
}
else if(x %in% midwest_list){
return("midwest")
}
else if(x %in% south_list){
return("south")
}
else{
return("other")
}
}
breaches$region <- sapply(breaches$State, region_check)
region_levels = c("northeast", "midwest", "south", "westcoast", "other")
breaches$region <- factor(breaches$region, levels= region_levels)
breaches %>%
ggplot(aes(x = region, y = Individuals_Affected, fill = region)) +
geom_col()
breaches %>%
filter(region == "other")
south_list <- c("MD", "DE", "VA", "WV", "KY", "TN", "NC", "SC", "FL", "GA", "AL", "MS", "LA", "AK", "OK", "TX", "DC", "PR")
#function to determine if the states are in the south
south_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% south_list){
return(TRUE)
}
else{
return(FALSE)
}
}
breaches$south <- sapply(breaches$State, south_check)
head(breaches)
midwest_list <- c("ND", "SD", "NE", "KS", "MO", "IA", "MN", "WI", "MI", "IL", "IN", "OH", "MT")
#function to determine if the states are in the midwest
midwest_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% midwest_list){
return(TRUE)
}
else{
return(FALSE)
}
}
breaches$midwest <- sapply(breaches$State, midwest_check)
head(breaches)
westcoast_list <- c("WY", "CO", "UT", "NV", "ID", "CA", "OR", "WA", "AK", "AZ", "NM")
#function to determine if the states are on the West Coast
westcoast_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% westcoast_list){
return(TRUE)
}
else{
return(FALSE)
}
}
breaches$westcoast <- sapply(breaches$State, westcoast_check)
head(breaches)
region_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% westcoast_list){
return("westcoast")
}
else if(x %in% northeast_list){
return("northeast")
}
else if(x %in% midwest_list){
return("midwest")
}
else if(x %in% south_list){
return("south")
}
else{
return("other")
}
}
breaches$region <- sapply(breaches$State, region_check)
region_levels = c("northeast", "midwest", "south", "westcoast", "other")
breaches$region <- factor(breaches$region, levels= region_levels)
breaches %>%
ggplot(aes(x = region, y = Individuals_Affected, fill = region)) +
geom_col()
breaches %>%
filter(region == "other")
south_list <- c("MD", "DE", "VA", "WV", "KY", "TN", "NC", "SC", "FL", "GA", "AL", "MS", "LA", "AK", "OK", "TX", "DC", "AR")
#function to determine if the states are in the south
south_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% south_list){
return(TRUE)
}
else{
return(FALSE)
}
}
breaches$south <- sapply(breaches$State, south_check)
head(breaches)
northeast_list <- c("CT", "MA", "NH", "NJ", "NY", "PA", "RI", "VT", "DE", "MD", "ME")
#function to determine if the states are in the northeast
northeast_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% northeast_list){
return(TRUE)
}
else{
return(FALSE)
}
}
breaches$northeast <- sapply(breaches$State, northeast_check)
head(breaches)
region_check <- function(x) {
if(is.na(x)){
return(NA)
}
else if(x %in% westcoast_list){
return("westcoast")
}
else if(x %in% northeast_list){
return("northeast")
}
else if(x %in% midwest_list){
return("midwest")
}
else if(x %in% south_list){
return("south")
}
else{
return("other")
}
}
breaches$region <- sapply(breaches$State, region_check)
region_levels = c("northeast", "midwest", "south", "westcoast", "other")
breaches$region <- factor(breaches$region, levels= region_levels)
breaches %>%
ggplot(aes(x = region, y = Individuals_Affected, fill = region)) +
geom_col()
breaches %>%
filter(region == "other")
breaches %>%
ggplot(aes(x=large_affected, fill = large_affected)) +
geom_bar()
